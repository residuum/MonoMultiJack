// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.UIManager UIManager;
    
    private Gtk.Action FileAction;
    
    private Gtk.Action ReStartJackdAction;
    
    private Gtk.Action StopJackdAction;
    
    private Gtk.Action StopAllAction;
    
    private Gtk.Action QuitAction;
    
    private Gtk.Action ConfigurationAction;
    
    private Gtk.Action ConfigureJackdAction;
    
    private Gtk.Action AddRemoveApplicationsAction;
    
    private Gtk.Action HelpAction;
    
    private Gtk.Action AboutAction;
    
    private Gtk.Action ReStartJackd;
    
    private Gtk.VBox mainVbox;
    
    private Gtk.MenuBar menubar1;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("File"), null, null);
        this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("File");
        w1.Add(this.FileAction, null);
        this.ReStartJackdAction = new Gtk.Action("ReStartJackdAction", Mono.Unix.Catalog.GetString("(Re)Start Jackd"), null, "gtk-refresh");
        this.ReStartJackdAction.Sensitive = false;
        this.ReStartJackdAction.ShortLabel = Mono.Unix.Catalog.GetString("(Re)Start Jackd");
        w1.Add(this.ReStartJackdAction, null);
        this.StopJackdAction = new Gtk.Action("StopJackdAction", Mono.Unix.Catalog.GetString("Stop Jackd"), null, "gtk-stop");
        this.StopJackdAction.Sensitive = false;
        this.StopJackdAction.ShortLabel = Mono.Unix.Catalog.GetString("Stop Jackd");
        w1.Add(this.StopJackdAction, null);
        this.StopAllAction = new Gtk.Action("StopAllAction", Mono.Unix.Catalog.GetString("Stop All"), null, "gtk-stop");
        this.StopAllAction.Sensitive = false;
        this.StopAllAction.ShortLabel = Mono.Unix.Catalog.GetString("Stop All");
        w1.Add(this.StopAllAction, null);
        this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("Quit"), null, "gtk-quit");
        this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("Quit");
        w1.Add(this.QuitAction, null);
        this.ConfigurationAction = new Gtk.Action("ConfigurationAction", Mono.Unix.Catalog.GetString("Configuration"), null, null);
        this.ConfigurationAction.ShortLabel = Mono.Unix.Catalog.GetString("Configuration");
        w1.Add(this.ConfigurationAction, null);
        this.ConfigureJackdAction = new Gtk.Action("ConfigureJackdAction", Mono.Unix.Catalog.GetString("Configure Jackd"), null, "gtk-preferences");
        this.ConfigureJackdAction.ShortLabel = Mono.Unix.Catalog.GetString("Configure Jackd");
        w1.Add(this.ConfigureJackdAction, null);
        this.AddRemoveApplicationsAction = new Gtk.Action("AddRemoveApplicationsAction", Mono.Unix.Catalog.GetString("Add / Remove Applications"), null, "gtk-preferences");
        this.AddRemoveApplicationsAction.ShortLabel = Mono.Unix.Catalog.GetString("Add / Remove Applications");
        w1.Add(this.AddRemoveApplicationsAction, null);
        this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
        this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
        w1.Add(this.HelpAction, null);
        this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("About"), null, "gtk-about");
        this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("About");
        w1.Add(this.AboutAction, null);
        this.ReStartJackd = new Gtk.Action("ReStartJackd", Mono.Unix.Catalog.GetString("(Re)Start Jackd"), null, null);
        this.ReStartJackd.ShortLabel = Mono.Unix.Catalog.GetString("(Re)Start Jackd");
        w1.Add(this.ReStartJackd, "<Mod2>Escape");
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("MainWindow");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.mainVbox = new Gtk.VBox();
        this.mainVbox.Name = "mainVbox";
        this.mainVbox.Spacing = 6;
        // Container child mainVbox.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='ReStartJackdAction' action='ReStartJackdAction'/><menuitem name='StopJackdAction' action='StopJackdAction'/><menuitem name='StopAllAction' action='StopAllAction'/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='ConfigurationAction' action='ConfigurationAction'><menuitem name='ConfigureJackdAction' action='ConfigureJackdAction'/><menuitem name='AddRemoveApplicationsAction' action='AddRemoveApplicationsAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
        this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
        this.menubar1.Name = "menubar1";
        this.mainVbox.Add(this.menubar1);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.mainVbox[this.menubar1]));
        w2.Position = 0;
        w2.Expand = false;
        w2.Fill = false;
        this.Add(this.mainVbox);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 366;
        this.DefaultHeight = 300;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.ReStartJackdAction.Activated += new System.EventHandler(this.restartJackd);
        this.StopJackdAction.Activated += new System.EventHandler(this.stopJackd);
        this.StopAllAction.Activated += new System.EventHandler(this.stopAll);
        this.QuitAction.Activated += new System.EventHandler(this.OnQuitActionActivated);
        this.ConfigureJackdAction.Activated += new System.EventHandler(this.ConfigureJackd);
        this.AddRemoveApplicationsAction.Activated += new System.EventHandler(this.ConfigureApplications);
        this.AboutAction.Activated += new System.EventHandler(this.AboutDialog);
    }
}
